// <auto-generated />
using System;
using LoanApplication.WebHost.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanApplication.WebHost.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(LoanDbContext))]
    partial class LoanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LoanApplication.WebHost.Domain.LoanApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LoanApplications", (string)null);
                });

            modelBuilder.Entity("LoanApplication.WebHost.Domain.Operator", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CompetenceLevel")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CompetenceLevel_Amount");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Operators", (string)null);
                });

            modelBuilder.Entity("LoanApplication.WebHost.Domain.LoanApplication", b =>
                {
                    b.OwnsOne("LoanApplication.WebHost.Domain.Customer", "Customer", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Birthdate")
                                .HasColumnType("datetime2");

                            b1.Property<decimal>("MonthlyIncome")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Customer_MonthlyIncome_Amount");

                            b1.Property<string>("NationalIdentifier")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("nvarchar(11)")
                                .HasColumnName("Customer_NationalIdentifier_Value");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");

                            b1.OwnsOne("LoanApplication.WebHost.Domain.Address", "Address", b2 =>
                                {
                                    b2.Property<Guid>("CustomerLoanApplicationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("ZipCode")
                                        .IsRequired()
                                        .HasMaxLength(6)
                                        .HasColumnType("nvarchar(6)");

                                    b2.HasKey("CustomerLoanApplicationId");

                                    b2.ToTable("LoanApplications");

                                    b2.WithOwner()
                                        .HasForeignKey("CustomerLoanApplicationId");
                                });

                            b1.OwnsOne("LoanApplication.WebHost.Domain.Name", "Name", b2 =>
                                {
                                    b2.Property<Guid>("CustomerLoanApplicationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("First")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("Last")
                                        .IsRequired()
                                        .HasMaxLength(75)
                                        .HasColumnType("nvarchar(75)");

                                    b2.HasKey("CustomerLoanApplicationId");

                                    b2.ToTable("LoanApplications");

                                    b2.WithOwner()
                                        .HasForeignKey("CustomerLoanApplicationId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();

                            b1.Navigation("Name")
                                .IsRequired();
                        });

                    b.OwnsOne("LoanApplication.WebHost.Domain.Decision", "Decision", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("DecisionBy")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Decision_DecisionBy_Value");

                            b1.Property<DateTime>("DecisionDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");
                        });

                    b.OwnsOne("LoanApplication.WebHost.Domain.Loan", "Loan", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("InterestRate")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Loan_InterestRate_Value");

                            b1.Property<decimal>("LoanAmount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Loan_LoanAmount_Amount");

                            b1.Property<int>("LoanNumberOfYears")
                                .HasColumnType("int");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");
                        });

                    b.OwnsOne("LoanApplication.WebHost.Domain.Property", "Property", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Property_Value_Amount");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");

                            b1.OwnsOne("LoanApplication.WebHost.Domain.Address", "Address", b2 =>
                                {
                                    b2.Property<Guid>("PropertyLoanApplicationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("ZipCode")
                                        .IsRequired()
                                        .HasMaxLength(6)
                                        .HasColumnType("nvarchar(6)");

                                    b2.HasKey("PropertyLoanApplicationId");

                                    b2.ToTable("LoanApplications");

                                    b2.WithOwner()
                                        .HasForeignKey("PropertyLoanApplicationId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();
                        });

                    b.OwnsOne("LoanApplication.WebHost.Domain.Registration", "Registration", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("RegisteredBy")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Registration_RegisteredBy_Value");

                            b1.Property<DateTime>("RegistrationDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");
                        });

                    b.OwnsOne("LoanApplication.WebHost.Domain.ScoringResult", "Score", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Explanation")
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)");

                            b1.Property<string>("Score")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");
                        });

                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Decision");

                    b.Navigation("Loan")
                        .IsRequired();

                    b.Navigation("Property")
                        .IsRequired();

                    b.Navigation("Registration")
                        .IsRequired();

                    b.Navigation("Score");
                });

            modelBuilder.Entity("LoanApplication.WebHost.Domain.Operator", b =>
                {
                    b.OwnsOne("LoanApplication.WebHost.Domain.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("OperatorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("First")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("Last")
                                .IsRequired()
                                .HasMaxLength(75)
                                .HasColumnType("nvarchar(75)")
                                .HasColumnName("LastName");

                            b1.HasKey("OperatorId");

                            b1.ToTable("Operators");

                            b1.WithOwner()
                                .HasForeignKey("OperatorId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
